[include]
    path = /Users/rzienert/.gitconfig_local
[core]
    excludesfile = /Users/rzienert/.gitignore_global
    pager = "diff-so-fancy | less --tabs=4 -RFX"
[diff-so-fancy]
    markEmptyLines = false
	first-run = false
[color]
	ui = true
[credential]
    helper = osxkeychain
[push]
    default = current
[merge]
    ff = only
[pull]
    default = current
	ff = true
[rebase]
    autosquash = true
[alias]
    aliases = config --get-regexp alias 

    # Short-hand
    cp = cherry-pick
    cl = clone
    ci = commit
    co = checkout
    br = branch
    d = diff
    r = reset
    fu = fetch upstream

    # Core
    st = status -sb
    nb = checkout -b
    ## "correct"-style add-all
    aa = add -A :/
    c = commit -m 
    # Stage all changes and ammend them into the previous commit
    cia = commit --all --amend
    pum = pull upstream master
    ## `git purr upstream master`
    purr = pull --rebase
    ready = rebase -i @{u}
    rc = rebase --continue
    ra = rebase --abort
    ## Force push to origin/$currentBranch
    fp = !git push --force -u origin $(git rev-parse --abbrev-ref HEAD)
    pu = "!f() { git fetch upstream && git pull upstream $@; }; f"

    # Multitasking
    sl = stash list
    sa = stash apply
    ss = stash save
    ## Adds all changes and make a wip commit
    wip = !git aa && git c "wip"

    # Diffs, Patches
    dc = diff --cached
    du = diff upstream/master
    pst = apply --stat
    pchk = apply --check
    psgn = am --signoff

    # You had a bad idea
    ## Hard reset your work, but keep it in reflog just in case
    wipe = !git add -A && git commit -qm 'WIPE SAVEPOINT' && git reset HEAD~1 --hard
    rh = reset --hard
    ## Undo the last commit
    undo = reset HEAD~1 --mixed

    # Cleanup
    ## Deletes all of your branches, yolo
    dm = "!f() { git for-each-ref --format='%(refname:short)' refs/heads/$@ | xargs git br -D; }; f"

    # Extras
    ## Set your current branch to track a remote: `git track upstream/master`
    track = branch --set-upstream-to
    ## List aliases
    la = "!git config -l | grep alias | cut -c 7-"
    ## List all of your local branches by last commit time, oldest first
    brs = "!f() { git for-each-ref --sort=committerdate refs/heads/ --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(color:red)%(objectname:short)%(color:reset) - %(contents:subject) - %(authorname) (%(color:green)%(committerdate:relative)%(color:reset))'; }; f"
   
    # danny's stuff that I like
    grep = grep -Ii
    #grep from root folder
    gra = "!f() { A=$(pwd) && TOPLEVEL=$(git rev-parse --show-toplevel) && cd $TOPLEVEL && git grep --full-name -In $1 | xargs -I{} echo $TOPLEVEL/{} && cd $A; }; f"

    #grep on filename
    f = "!git ls-files | grep -i"

    lasttag = describe --tags --abbrev=0
    lt = describe --tags --abbrev=0

    #merges
    ours = "!f() { git co --ours $@ && git add $@; }; f"
    theirs = "!f() { git co --theirs $@ && git add $@; }; f"
[user]
	email = rzienert@netflix.com
	name = Rob Zienert
[url "git@github.com:"]
    insteadOf = "https://github.com/"`
